// <auto-generated />
using MemeGenerator;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MemeGenerator.Migrations
{
    [DbContext(typeof(MemeContext))]
    partial class MemeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MemeGenerator.Models.Meme", b =>
                {
                    b.Property<int>("MemeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bottomText");

                    b.Property<int>("bottomTextX");

                    b.Property<int>("bottomTextY");

                    b.Property<int>("fontSize");

                    b.Property<string>("imagePath");

                    b.Property<string>("topText");

                    b.Property<int>("topTextX");

                    b.Property<int>("topTextY");

                    b.HasKey("MemeId");

                    b.ToTable("Memes");

                    b.HasData(
                        new { MemeId = 1, bottomText = "Peace", bottomTextX = 0, bottomTextY = 0, fontSize = 38, imagePath = "", topText = "Howdy", topTextX = 0, topTextY = 0 },
                        new { MemeId = 2, bottomText = "Ciao", bottomTextX = 0, bottomTextY = 0, fontSize = 38, imagePath = "", topText = "Hola", topTextX = 0, topTextY = 0 }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
